services:
  redis:
    image: redis:7.2-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  auth-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
      POSTGRES_DB: authdb
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  task-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpass
      POSTGRES_DB: taskdb
    volumes:
      - task-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth:
    build: ./auth-service
    environment:
      PORT: 4000
      DATABASE_URL: postgres://authuser:authpass@auth-db:5432/authdb
      REDIS_URL: redis://redis:6379/0
      SESSION_TTL_SECONDS: 2592000 # 30 days
      COOKIE_SECURE: "false" # true if behind HTTPS
      ORIGIN: http://localhost
    depends_on:
      auth-db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "4000:4000"

  task:
    build: ./task-service
    environment:
      PORT: 8000
      DATABASE_URL: postgresql+psycopg://taskuser:taskpass@task-db:5432/taskdb
      REDIS_URL: redis://redis:6379/0
      SMTP_HOST: ""
      SMTP_PORT: "587"
      SMTP_USER: ""
      SMTP_PASS: ""
      SMTP_FROM: "no-reply@example.com"
      BASE_URL: http://localhost
    depends_on:
      task-db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  web:
    build: ./frontend
    depends_on:
      - auth
      - task
    ports:
      - "80:80"

volumes:
  auth-db-data:
  task-db-data:
  redis-data:
